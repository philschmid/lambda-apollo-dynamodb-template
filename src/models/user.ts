/** @format */

import {attribute, rangeKey, table, autoGeneratedHashKey} from '@aws/dynamodb-data-mapper-annotations'
import {embed} from '@aws/dynamodb-data-mapper'
import {RuleSet} from './ruleSet'

@table('userTable2')
export class User {
  @autoGeneratedHashKey({
    // <-- this is your normal hash key (shared by table and of LSI)
    indexKeyConfigurations: {
      lsiAgeIndex: 'HASH', // The key (ItemIdIndex) is the name of the index; the value is the key type ('HASH' or 'RANGE')
    },
  })
  // @autoGeneratedHashKey()
  userid: string

  @rangeKey()
  username: string

  @attribute({defaultProvider: () => new Date()})
  createdAt?: Date

  @attribute()
  name?: string

  @attribute()
  email?: string

  @attribute({
    // And this other attribute acts as the LSI's RangeKey
    indexKeyConfigurations: {
      lsiAgeIndex: 'RANGE', // The key (ItemIdIndex) is the name of the index; the value is the key type ('HASH' or 'RANGE')
    },
  })
  // @attribute()
  age?: number

  @attribute()
  passwordHash?: string

  @attribute()
  passwordSalt?: string

  @attribute({memberType: embed(RuleSet)})
  ruleSet?: Array<RuleSet>
}
