# @format

# serverless.yml
service: lambda-apollo-dynamodb
plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline
provider:
  name: aws
  runtime: nodejs8.10
  # deploymentBucket: lambda-apollo-dynamodb-d-serverlessdeploymentbuck-t9pc8fb6q2vd
  environment:
    DYNAMODB_TABLE: userTable2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - lambda:*
        - cloudformation:*
        - s3:*
      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'
  vpc:
  securityGroupIds:
    - sg-0c5bd9bba5b76fc87
  subnetIds:
    - subnet-7e346a33
    - subnet-1644587d
    - subnet-4c440f31
  # you can overwrite defaults here
  stage: dev
  region: eu-central-1
  apiGateway:
    restApiId: 8whyqdqlkd # REST API resource ID. Default is generated by the framework
    restApiRootResourceId: mxtvd5rqqd # Root resource, represent as / path
functions:
  graphql:
    # this is formatted as <FILENAME>.<HANDLER>
    handler: src/index.graphqlHandler
    memorySize: 128
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: playground
          method: post
          cors: true
      - http:
          path: playground
          method: get
          cors: true
resources: # CloudFormation template syntax
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: 'Retain'
      Properties:
        AttributeDefinitions:
          - AttributeName: userid
            AttributeType: S
          - AttributeName: username
            AttributeType: S
          - AttributeName: age
            AttributeType: N
        KeySchema:
          - AttributeName: userid
            KeyType: HASH
          - AttributeName: username
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: lsiAgeIndex
            KeySchema:
              - AttributeName: userid
                KeyType: HASH
              - AttributeName: age
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
custom:
  dynamodb:
    # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true
